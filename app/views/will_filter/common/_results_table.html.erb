<table class='wf_paginator' style="margin-top:10px; margin-bottom:10px;">
    <tr>
        <td style='text-align:left'>
            <%= paginate(results) %>
        </td>
        <td style='text-align:right'>
						<% if results.total_count > 0 %>
							Showing <%= results.offset_value + 1 %> - <%= results.offset_value + results.length %> of <%= results.total_count %>
						<% else %>	
							No results found
						<% end %>
        </td>
    </tr>
</table>

<table class='wf_results_table'>
  <thead>
    <tr>
      <% 
        carray = [] # stores the order of the columns

        opts[:columns].each_with_index do |column, index|
          cmeta = {}

          if column.is_a?(Array)
            cmeta[:key] = column[0]
            cmeta[:value] = column[1]
            unless column[2].nil?
              if column[2].is_a?(Hash)
                cmeta.merge!(column[2])           
              elsif column[2].is_a?(String) 
                cmeta[:style] = column[2]
              else
                raise WillFilter::FilterException.new("Unsupported table column format #{column[2]}")  
              end
            end    
          elsif column.is_a?(Hash)
            cmeta = column
            cmeta[:key] ||= "key_#{index}"
          else
            cmeta[:key] = column
          end
          
          cmeta[:title] ||= filter.condition_title_for(cmeta[:key])  

          carray << cmeta

          sort_direction        = filter.column_sorted?(cmeta[:key]) ? filter.order_type : "asc"
          sort_direction_click  = filter.column_sorted?(cmeta[:key]) ? (sort_direction == "asc" ? "desc" : "asc") : "asc"

          # column class name 
          title_class_name      = cmeta[:title_class] || cmeta[:key].to_s
          title_class_name      << " sortable"                 if filter.contains_column?(cmeta[:key])              
          title_class_name      << " current_sort"             if filter.column_sorted?(cmeta[:key])
          title_class_name      << " #{sort_direction}"

          # extra styling that can be applied on a column
          title_style           = cmeta[:title_style] || "" 
          title_style           << ";width:15px" if cmeta[:key] == :checkbox          
        %>

        <th class="<%= title_class_name %>" style="<%=title_style%>">
          <div class="table_head_container">
            <% if filter.contains_column?(cmeta[:key]) %>
              <div class="sort_control">
                <%= link_to "", filter.to_params(:wf_order => cmeta[:key], :wf_order_type => 'asc'), :title => "sort by #{cmeta[:title]} ascending", :class => 'up' %>
                <%= link_to "", filter.to_params(:wf_order => cmeta[:key], :wf_order_type => 'desc'), :title => "sort by #{cmeta[:title]} descending", :class => 'down' %>
              </div>
    
              <%= link_to(cmeta[:title], filter.to_params(:wf_order => cmeta[:key], :wf_order_type => sort_direction_click), :class => "sort_link") %>

            <% elsif cmeta[:key] == :checkbox %>
              <%= check_box_tag("wf_check_all", "", false, :onClick => "wfCheckAll(this)") %>

            <% else %>
              <%= cmeta[:title] %> 

            <% end %> 
          </div>
        </th>
      <% end %>
    </tr>
  </thead>  
   
  <% pp carray %>  

  <tbody>
    <% results.each_with_index do |obj, index| %>
      <tr class='data_row <%=(index % 2 == 0) ? "wf_row_even" : "wf_row_odd"%>'>
        <% carray.each_with_index do |cmeta, column_index| %>
          <%
            value_style = cmeta[:style] || 'padding-top:2px;padding-bottom:2px;' # should be moved to css
            value_class = cmeta[:class] || ''

            if cmeta[:value].nil?
              value = obj.send(cmeta[:key]) 
            elsif cmeta[:value].is_a?(Proc)
              value = cmeta[:value].call(obj)
            else
              value = cmeta[:value]
            end

            value_style << 'width:30px;' if cmeta[:key] == :checkbox
            value_class << ' current_sort' if filter.column_sorted?(cmeta[:key])

          %>
          <td style='<%=value_style%>' class='<%=value_class%>'>
               <% if cmeta[:key] == :checkbox %>
                  <%= check_box_tag("#{value}[]", obj.id, false, :id => "wf_check_#{index}", :onClick => "wfVerifyTrigger(this)") %>
            
               <% elsif value.is_a?(Hash) %>
                  <% value.each do |key, value| %>
                    <strong><%=key%>:</strong> <%= value %>;
                  <% end %>
                  
                <% elsif value.is_a?(Time) %> 
                  <%= value.strftime("%m/%d/%Y %l:%M:%S") %>

                <% elsif value.is_a?(Date) %>  
                  <%= value.strftime("%m/%d/%Y") %>
                  
               <% else %>
                  <%= value.to_s %> 
               <% end %>  
          </td>
        <% end %>
      </tr>
    <% end  %>
  </tbody>
</table>    
    
<script>
  function wfVerifyTrigger(check) {
    if (!check.checked) {
      var check_all = document.getElementById("wf_check_all");
      check_all.checked = false;
    }
  }
  
  function wfCheckAll(trigger) {
    var index = 0;
    var check = document.getElementById("wf_check_" + index);
    while (check) {
      check.checked = trigger.checked;
      check = document.getElementById("wf_check_" + (++index));
    }
  }
</script>
